import{_ as s,v as a,b as n,R as l}from"./chunks/framework.435485db.js";const e="/Jachin-knowledge-base/assets/demoImg001.9e4ff125.png",F=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"column/css/002_盒子毛玻璃效果.md","filePath":"column/css/002_盒子毛玻璃效果.md"}'),o={name:"column/css/002_盒子毛玻璃效果.md"},p=l('<h3 id="盒子毛玻璃效果" tabindex="-1">盒子毛玻璃效果 <a class="header-anchor" href="#盒子毛玻璃效果" aria-label="Permalink to &quot;盒子毛玻璃效果&quot;">​</a></h3><hr><h4 id="效果" tabindex="-1">效果 <a class="header-anchor" href="#效果" aria-label="Permalink to &quot;效果&quot;">​</a></h4><p><img src="'+e+`" alt="毛玻璃"></p><h4 id="代码" tabindex="-1">代码 <a class="header-anchor" href="#代码" aria-label="Permalink to &quot;代码&quot;">​</a></h4><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/* 目标盒子 */</span></span>
<span class="line"><span style="color:#FFCB6B;">backdrop-filter</span><span style="color:#A6ACCD;">: blur(5px);</span></span>
<span class="line"><span style="color:#FFCB6B;">background-color</span><span style="color:#A6ACCD;">: rgba(255</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 255</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 255</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> 0</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">3</span><span style="color:#A6ACCD;">);</span></span></code></pre></div><h4 id="扩展" tabindex="-1">扩展 <a class="header-anchor" href="#扩展" aria-label="Permalink to &quot;扩展&quot;">​</a></h4><p><code>backdrop-filter</code></p><p>CSS 中的一个样式过滤器属性，它可以对元素背后的区域添加图形效果，这样元素后面的内容会透过滤镜效果显示出来。</p><p><strong>其它属性</strong></p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/* 调整背景颜色 */</span></span>
<span class="line"><span style="color:#FFCB6B;">backdrop-filter</span><span style="color:#A6ACCD;">: saturate(180%);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 添加亮度 */</span></span>
<span class="line"><span style="color:#FFCB6B;">backdrop-filter</span><span style="color:#A6ACCD;">: brightness(0</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">8</span><span style="color:#A6ACCD;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 创建灰度效果 */</span></span>
<span class="line"><span style="color:#FFCB6B;">backdrop-filter</span><span style="color:#A6ACCD;">: grayscale(100%);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 反转颜色 */</span></span>
<span class="line"><span style="color:#FFCB6B;">backdrop-filter</span><span style="color:#A6ACCD;">: invert(100%);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 多重滤镜合成 */</span></span>
<span class="line"><span style="color:#FFCB6B;">backdrop-filter</span><span style="color:#A6ACCD;">: blur(5px) saturate(150%);</span></span></code></pre></div>`,11),t=[p];function c(r,i,d,y,C,h){return a(),n("div",null,t)}const b=s(o,[["render",c]]);export{F as __pageData,b as default};
